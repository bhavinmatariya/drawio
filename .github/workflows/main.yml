# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "docker" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      REPOSITORY_URL: https://github.com/jituhooda/instantarweb
      IMAGE_NAME: ${{ github.repository }}
      SLACK_WEBHOOK_URL: https://hooks.slack.com/services/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
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    #   - uses: act10ns/slack@v1
    #     with:
    #       status: starting
    #       channel: '#instantarweb_workflows'
    #       message: Starting Docker Build and Push...
    #     if: always()
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: jituhooda
          password: e0880390-5373-4ed3-bdde-58f7b5998a13
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: jituhooda/drawio:latest
          cache-from: type=registry,ref=jituhooda/drawio:buildcache
          cache-to: type=registry,ref=jituhooda/drawio:buildcache,mode=max
    #   - name: docker pull on dev24
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: dev24.instantar.io
    #       username: root
    #       key_path : ./digitaloceanssh
    #       port: 22
    #       script: |
    #         cd /root/Jitu
    #         docker-compose pull
    #         docker-compose up -d
    #   - name: Send mail
    #     uses: dawidd6/action-send-mail@v3.6.1
    #     with:
    #       # Required mail server address:
    #       server_address: smtp.gmail.com
    #       # Required mail server port:
    #       server_port: 465
    #       # Optional (recommended): mail server username:
    #       username: instantar.status@gmail.com
    #       # Optional (recommended) mail server password:
    #       password: cbtsqavrvqzhllfw
    #       # Required mail subject:
    #       subject: Github Actions job result
    #       # Required recipients' addresses:
    #       to: laxsharma79@gmail.com,jitenderh@gmail.com,subham.bubai92@gmail.com
    #       # Required sender full name (address can be skipped):
    #       from: Github # <user@example.com>
    #       # Optional whether this connection use TLS (default is true if server_port is 465)
    #       secure: true
    #       # Optional plain body:
    #       body: Build job of ${{github.repository}} - ${{ github.head_ref || github.ref_name }} - ${{ github.event.head_commit.message }} - ${{ github.sha }} completed successfully!
    #       # Optional HTML body read from file:
    #       html_body: 
    #       # Optional carbon copy recipients:
    #       cc: 
    #       # Optional blind carbon copy recipients:
    #       bcc: 
    #       # Optional recipient of the email response:
    #       reply_to: 
    #       # Optional Message ID this message is replying to:
    #       in_reply_to: 
    #       # Optional unsigned/invalid certificates allowance:
    #       ignore_cert: true
    #       # Optional converting Markdown to HTML (set content_type to text/html too):
    #       convert_markdown: true
    #       # Optional attachments:
    #       attachments: attachments.zip,git.diff,./dist/static/*.js
    #       # Optional priority: 'high', 'normal' (default) or 'low'
    #       priority: low
    #   - uses: act10ns/slack@v1
    #     with:
    #       status: ${{ job.status }}
    #       steps: ${{ toJson(steps) }}
    #       channel: '#instantarweb_workflows'
    #     if: always()
